# Generated by Django 5.0.2 on 2025-04-22 12:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Chain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chain", models.CharField(max_length=50, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_testnet", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "区块链",
                "verbose_name_plural": "区块链",
            },
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("symbol", models.CharField(max_length=20)),
                ("address", models.CharField(blank=True, max_length=100)),
                ("decimals", models.IntegerField(default=18)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tokens",
                        to="CryptoAnalyst.chain",
                    ),
                ),
            ],
            options={
                "verbose_name": "代币",
                "verbose_name_plural": "代币",
                "unique_together": {("chain", "symbol")},
            },
        ),
        migrations.CreateModel(
            name="TokenAnalysisData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.FloatField(blank=True, null=True)),
                ("volume_24h", models.FloatField(blank=True, null=True)),
                ("price_change_24h", models.FloatField(blank=True, null=True)),
                ("fear_greed_index", models.FloatField(blank=True, null=True)),
                (
                    "nupl",
                    models.FloatField(blank=True, help_text="未实现盈亏", null=True),
                ),
                (
                    "exchange_netflow",
                    models.FloatField(blank=True, help_text="交易所净流入", null=True),
                ),
                (
                    "mayer_multiple",
                    models.FloatField(blank=True, help_text="梅耶倍数", null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "token",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_data",
                        to="CryptoAnalyst.token",
                    ),
                ),
            ],
            options={
                "verbose_name": "代币分析数据",
                "verbose_name_plural": "代币分析数据",
            },
        ),
    ]
